// Code generated by protoc-gen-go. DO NOT EDIT.
// source: loggingtags/safe.proto

// protoc-gen-loggingtags generates a LoggingTags() map[string]interface{}
// function for every message in a protobuf spec. This extension adds the
// ability to mark a field as safe to opt it into being logged via that
// mechanism. You can annotate individual fields, like so:
//
//     message Confidential {
//         string secret_data = 1;
//         string public_data = 2 [(heroku.loggingtags.safe) = true];
//     }

package loggingtags

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

var E_Safe = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50000,
	Name:          "heroku.loggingtags.safe",
	Tag:           "varint,50000,opt,name=safe",
	Filename:      "loggingtags/safe.proto",
}

func init() {
	proto.RegisterExtension(E_Safe)
}

func init() { proto.RegisterFile("loggingtags/safe.proto", fileDescriptor_40b2e4d699242277) }

var fileDescriptor_40b2e4d699242277 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcb, 0xc9, 0x4f, 0x4f,
	0xcf, 0xcc, 0x4b, 0x2f, 0x49, 0x4c, 0x2f, 0xd6, 0x2f, 0x4e, 0x4c, 0x4b, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x12, 0xca, 0x48, 0x2d, 0xca, 0xcf, 0x2e, 0xd5, 0x43, 0x92, 0x96, 0x52, 0x48,
	0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0xab, 0x48, 0x2a, 0x4d, 0xd3, 0x4f, 0x49, 0x2d, 0x4e,
	0x2e, 0xca, 0x2c, 0x28, 0xc9, 0x2f, 0x82, 0xe8, 0xb2, 0x32, 0xe6, 0x62, 0x01, 0x99, 0x21, 0x24,
	0xab, 0x07, 0x51, 0xaa, 0x07, 0x53, 0xaa, 0xe7, 0x96, 0x99, 0x9a, 0x93, 0xe2, 0x5f, 0x50, 0x92,
	0x99, 0x9f, 0x57, 0x2c, 0x71, 0xa1, 0x8d, 0x59, 0x81, 0x51, 0x83, 0x23, 0x08, 0xac, 0xd8, 0xc9,
	0x3f, 0xca, 0x37, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x1f, 0x62, 0xaf,
	0x7e, 0x85, 0x7e, 0x72, 0x6e, 0x0a, 0xc4, 0xa6, 0x64, 0xdd, 0xf4, 0xd4, 0x3c, 0x5d, 0x64, 0x77,
	0x42, 0xd5, 0x20, 0x09, 0x59, 0x23, 0xb1, 0x93, 0xd8, 0xc0, 0xda, 0x8c, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xc9, 0x66, 0x62, 0x52, 0xdc, 0x00, 0x00, 0x00,
}
